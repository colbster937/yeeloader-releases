<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
    <foreignObject x="0" y="0" width="100%" height="100%" style="display: none;" id="object">
        <div xmlns="http://www.w3.org/1999/xhtml" style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; overflow: hidden;">
            <iframe src="data:text/html;base64," style="width: 100%; height: 100%; border: none; object-fit: cover;"></iframe>
        </div>
    </foreignObject>

    <foreignObject x="0" y="0" width="100%" height="100%" style="display: flex;" id="noscript">
        <div xmlns="http://www.w3.org/1999/xhtml" style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; overflow: hidden;">
            <svg id="visual" viewBox="0 0 100 100" preserveAspectRatio="none" width="100vw" height="100vh" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
            <defs>
                <filter id="blur1" x="-10%" y="-10%" width="120%" height="120%">
                <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>
                <feGaussianBlur stdDeviation="161" result="effect1_foregroundBlur"></feGaussianBlur>
                </filter>
            </defs>
            <rect width="100" height="100" fill="#6600FF"></rect>
            <g filter="url(#blur1)">
                <circle cx="30" cy="40" fill="#00CC99" r="40"></circle>
                <circle cx="60" cy="10" fill="#6600FF" r="40"></circle>
                <circle cx="5" cy="30" fill="#00CC99" r="40"></circle>
                <circle cx="90" cy="90" fill="#00CC99" r="40"></circle>
                <circle cx="25" cy="5" fill="#6600FF" r="40"></circle>
                <circle cx="20" cy="85" fill="#00CC99" r="40"></circle>
            </g>
            </svg>
        </div>
    </foreignObject>

    <script type="text/javascript">
        //<![CDATA[
        (function() {
            document.getElementById("object").style.display = "flex";
            document.getElementById("noscript").style.display = "none";
        })();
        //]]>
    </script>
</svg>
